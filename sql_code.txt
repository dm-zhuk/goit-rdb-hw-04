`#1 -- Create new schema, tables
CREATE SCHEMA LibraryManagement;
USE LibraryManagement;

CREATE TABLE authors (
    author_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    author_name VARCHAR(255)
);

CREATE TABLE genres (
    genre_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    genre_name VARCHAR(255)
);

CREATE TABLE books (
    book_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255),
    publication_year YEAR,
    author_id INT NOT NULL,
    FOREIGN KEY (author_id)
        REFERENCES authors (author_id),
    genre_id INT NOT NULL,
    FOREIGN KEY (genre_id)
        REFERENCES genres (genre_id)
);

CREATE TABLE users (
    user_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255),
    email VARCHAR(45)
);

CREATE TABLE borrowed_books (
    borrow_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    book_id INT NOT NULL,
    FOREIGN KEY (book_id)
        REFERENCES books (book_id),
    user_id INT NOT NULL,
    FOREIGN KEY (user_id)
        REFERENCES users (user_id),
    borrow_date DATE,
    return_date DATE
);

#2 -- Insert data into tables
INSERT INTO authors (author_name) VALUES
    ('J.K. Rowling'),
    ('George R.R. Martin'),
    ('Stephen King'),
    ('Agatha Christie'),
    ('Ernest Hemingway');

INSERT INTO genres (genre_name) VALUES
    ('Fantasy'),
    ('Mystery'),
    ('Horror'),
    ('Drama'),
    ('Romance');
    
INSERT INTO books (title, publication_year, author_id, genre_id) VALUES
    ('Harry Potter and the Sorcerer''s Stone', 1997, 1, 1),
    ('A Game of Thrones', 1996, 2, 1),
    ('The Shining', 1977, 3, 3),
    ('Murder on the Orient Express', 1934, 4, 2),
    ('The Old Man and the Sea', 1951, 5, 4);
    
INSERT INTO users (user_name, email) VALUES
    ('John Doe', 'john.doe@example.com'),
    ('Jane Smith', 'jane.smith@example.com'),
    ('Bob Johnson', 'bob.johnson@example.com'),
    ('Emily Davis', 'emily.davis@example.com'),
    ('Michael Wilson', 'michael.wilson@example.com');

INSERT INTO borrowed_books (book_id, user_id, borrow_date, return_date) VALUES
    (1, 1, '2024-04-15', '2024-04-29'),
    (2, 2, '2024-05-01', '2024-05-15'),
    (3, 3, '2024-03-20', '2024-04-03'),
    (4, 4, '2024-02-10', '2024-02-24'),
    (5, 5, '2024-06-01', '2024-06-15');
    
    #3 -- Create queries on mydb_hw tables
USE mydb_hw;

SELECT
  c.id AS category_id,
  c.name AS category_name,
  c.description AS category_description,
  p.id AS product_id,
  p.name AS product_name,
  p.supplier_id AS supplier_id,
  p.category_id AS product_category_id,
  p.unit AS product_unit,
  p.price AS product_price,
  s.id AS supplier_id,
  s.name AS supplier_name,
  s.contact AS supplier_contact,
  s.address AS supplier_address,
  s.city AS supplier_city,
  s.postal_code AS supplier_postal_code,
  s.country AS supplier_country,
  s.phone AS supplier_phone,
  o.id AS order_id,
  o.customer_id AS order_customer_id,
  o.employee_id AS order_employee_id,
  o.date AS order_date,
  o.shipper_id AS order_shipper_id,
  od.id AS order_detail_id,
  od.order_id AS order_detail_order_id,
  od.product_id AS order_detail_product_id,
  od.quantity AS order_detail_quantity,
  cu.id AS customer_id,
  cu.name AS customer_name,
  cu.contact AS customer_contact,
  cu.address AS customer_address,
  cu.city AS customer_city,
  cu.postal_code AS customer_postal_code,
  cu.country AS customer_country,
  e.employee_id AS employee_id,
  e.last_name AS employee_last_name,
  e.first_name AS employee_first_name,
  e.birthdate AS employee_birthdate,
  e.photo AS employee_photo,
  e.notes AS employee_notes,
  sh.id AS shipper_id,
  sh.name AS shipper_name,
  sh.phone AS shipper_phone
FROM
  categories c
  INNER JOIN products p ON c.id = p.category_id
  INNER JOIN suppliers s ON p.supplier_id = s.id
  INNER JOIN order_details od ON p.id = od.product_id
  INNER JOIN orders o ON od.order_id = o.id
  INNER JOIN customers cu ON o.customer_id = cu.id
  INNER JOIN employees e ON o.employee_id = e.employee_id
  INNER JOIN shippers sh ON o.shipper_id = sh.id;
 `